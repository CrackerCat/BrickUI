ext {
    // 计算当前分支的提交数量，若执行失败，则返回 1
    getGitCommitCount = { String gitPath ->
        def count = ('git -C ' + gitPath + ' rev-list --count HEAD').execute()
        count.waitFor()
        if (count.exitValue() != 0) {
            return '1'
        }
        return count.text.trim()
    }
    getGitSha = {
        def sha = 'git rev-parse --short HEAD'.execute()
        sha.waitFor()
        if (sha.exitValue() != 0) {
            return ''
        }
        return sha.text.trim()
    }
    addPomDependency = { Node dependenciesNode, Dependency dep, String scope ->
        if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified") {
            return
        }
        final dependencyNode = dependenciesNode.appendNode('dependency')
        dependencyNode.appendNode('groupId', dep.group)
        dependencyNode.appendNode('artifactId', dep.name)
        dependencyNode.appendNode('version', dep.version)
        dependencyNode.appendNode('scope', scope)
        if (!dep.transitive) {
            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
            exclusionNode.appendNode('groupId', '*')
            exclusionNode.appendNode('artifactId', '*')
        } else if (!dep.properties.excludeRules.empty) {
            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
            dep.properties.excludeRules.each { ExcludeRule rule ->
                exclusionNode.appendNode('groupId', rule.group ?: '*')
                exclusionNode.appendNode('artifactId', rule.module ?: '*')
            }
        }
    }
}