// 此为上传库到公司的 maven，此 maven 已不维护，故此上传脚本已废弃

apply plugin: 'maven'
apply plugin: 'signing'

static def getGitVersion() {
    return 'git log -1 --pretty=%h'.execute().text.trim()
}

def isReleaseBuild() {
    return POM_VERSION_NAME.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return "http://mvn.gz.cvte.cn/nexus/content/repositories/android_releases/"
}

def getSnapshotRepositoryUrl() {
    return "http://mvn.gz.cvte.cn/nexus/content/repositories/android_snapshots/"
}

def getRepositoryUsername() {
    return "Link"
}

def getRepositoryPassword() {
    return "LinkAndroid"
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                pom.groupId = POM_GROUP
                pom.artifactId = POM_ARTIFACT_ID
                pom.version = POM_VERSION_NAME
                repository(url: getReleaseRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
                snapshotRepository(url: getSnapshotRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
                pom.project {
                    name POM_NAME
                    packaging POM_PACKAGING
                    description POM_DESCRIPTION + " [Current Commit:" + getGitVersion() + "]"
                    url GITLAB_URL
                    scm {
                        url GITLAB_URL
                        connection GITLAB_URL
                        developerConnection GITLAB_URL
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task apklib(type: Zip) {
        appendix = extension = 'apklib'
        from 'AndroidManifest.xml'
        into('res') {
            from 'res'
        }
        into('src') {
            from 'src'
        }
    }

    task apkSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives apkSourcesJar
        archives apklib
    }
}
